/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AuxlBondDepository,
  AuxlBondDepositoryInterface,
} from "../AuxlBondDepository";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_Auxl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_principle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_DAO",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bondCalculator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "BondCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "internalPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "debtRatio",
        type: "uint256",
      },
    ],
    name: "BondPriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "BondRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBCV",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBCV",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "adjustment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "addition",
        type: "bool",
      },
    ],
    name: "ControlVariableAdjustment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "controlVariable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPayout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDebt",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "vestingTerm",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct AuxlBondDepository.Terms",
        name: "terms",
        type: "tuple",
      },
    ],
    name: "InitTerms",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenToRecover",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogRecoverLostToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "add",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "target",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "buffer",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastTime",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct AuxlBondDepository.Adjust",
        name: "adjust",
        type: "tuple",
      },
    ],
    name: "LogSetAdjustment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isHelper",
        type: "bool",
      },
    ],
    name: "LogSetStaking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum AuxlBondDepository.PARAMETER",
        name: "param",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogSetTerms",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "Auxl",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adjustment",
    outputs: [
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "buffer",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lastTime",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zapper",
        type: "address",
      },
    ],
    name: "allowZapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedZappers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondCalculator",
    outputs: [
      {
        internalType: "contract IBondCalculator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bondInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePaid",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "lastTime",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "vesting",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debtDecay",
    outputs: [
      {
        internalType: "uint256",
        name: "decay_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debtRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "debtRatio_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_controlVariable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPayout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxDebt",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_vestingTerm",
        type: "uint32",
      },
    ],
    name: "initializeBondTerms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isLiquidityBond",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDecay",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "payoutFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "pendingPayoutFor",
    outputs: [
      {
        internalType: "uint256",
        name: "pendingPayout_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "percentVestedFor",
    outputs: [
      {
        internalType: "uint256",
        name: "percentVested_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "principle",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "recoverLostToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_stake",
        type: "bool",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zapper",
        type: "address",
      },
    ],
    name: "removeZapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_addition",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_increment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_buffer",
        type: "uint32",
      },
    ],
    name: "setAdjustment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum AuxlBondDepository.PARAMETER",
        name: "_parameter",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_input",
        type: "uint256",
      },
    ],
    name: "setBondTerms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_helper",
        type: "bool",
      },
    ],
    name: "setStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingHelper",
    outputs: [
      {
        internalType: "contract IStakingHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "standardizedDebtRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terms",
    outputs: [
      {
        internalType: "uint256",
        name: "controlVariable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPayout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDebt",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "vestingTerm",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useHelper",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620034fd380380620034fd833981016040819052620000359162000151565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0385166200008857600080fd5b6001600160601b0319606086901b166080526001600160a01b038416620000ae57600080fd5b6001600160601b0319606085901b1660a0526001600160a01b038316620000d457600080fd5b6001600160601b0319606084901b1660c0526001600160a01b038216620000fa57600080fd5b6001600160601b0319606092831b811660e0529181901b909116610120526001600160a01b0316151560f81b6101005250620001c0915050565b80516001600160a01b03811681146200014c57600080fd5b919050565b600080600080600060a0868803121562000169578081fd5b620001748662000134565b9450620001846020870162000134565b9350620001946040870162000134565b9250620001a46060870162000134565b9150620001b46080870162000134565b90509295509295909350565b60805160601c60a05160601c60c05160601c60e05160601c6101005160f81c6101205160601c61325f6200029e60003980610e47528061176f5280611b65525080610e1c52806117415280611d9252508061149752806118425280611ad0525080610d2452806110a2528061132252806113b65250806104805280610e765280610f2552806110cf52806112b652806112f552806113e5528061179e52806119f052508061120d528061147552806114d3528061199e5280611b415280611bbe5280611e205280611f6e5280612029528061213a525061325f6000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80638dbdbe6d11610130578063d4d863ce116100b8578063e0176de81161007c578063e0176de814610449578063e30c397814610451578063e392a26214610459578063f5c2ab5b14610461578063fc7b9c181461047657610232565b8063d4d863ce146103f9578063d50256251461040c578063d796906014610426578063d7ccfb0b1461042e578063dc6549fb1461043657610232565b8063b4abccba116100ff578063b4abccba146103ab578063c33c53dd146103be578063c5332b7c146103c6578063cd1234b3146103ce578063cea55f57146103f157610232565b80638dbdbe6d14610375578063904b3ece1461038857806398fabd3a14610390578063ae9832cf1461039857610232565b80634cf088d9116101be578063759076e511610182578063759076e51461034257806377b818951461034a5780637927ebf814610352578063844b5c7c146103655780638da5cb5b1461036d57610232565b80634cf088d9146103045780634e71e0c81461030c578063507930ec1461031457806361d027b31461032757806363b3256b1461032f57610232565b80631ed2d71a116102055780631ed2d71a1461029d5780631feed31f146102b05780632f3f470a146102c3578063309bf24b146102d8578063451ee4a1146102eb57610232565b8063016a42841461023757806301b88ee814610255578063078dfbe7146102755780631e321a0f1461028a575b600080fd5b61023f61047e565b60405161024c9190612a9f565b60405180910390f35b61026861026336600461287f565b6104a2565b60405161024c919061310d565b6102886102833660046128da565b6104fa565b005b610288610298366004612987565b6105e9565b6102886102ab36600461287f565b610759565b6102686102be3660046128a2565b6107a4565b6102cb610a17565b60405161024c9190612af0565b6102886102e6366004612a12565b610a27565b6102f3610bb1565b60405161024c959493929190612afb565b61023f610bd7565b610288610be6565b61026861032236600461287f565b610c73565b61023f610d22565b61028861033d36600461287f565b610d46565b610268610dba565b61023f610dd6565b6102686103603660046129b5565b610de5565b610268610e18565b61023f610fcf565b6102686103833660046129e5565b610fde565b61026861173d565b61023f611840565b6102886103a6366004612940565b611864565b6102cb6103b936600461287f565b61199a565b61023f611b3f565b61023f611b63565b6103e16103dc36600461287f565b611b87565b60405161024c94939291906131a5565b610268611bb9565b6102886104073660046128a2565b611c82565b610414611d75565b60405161024c96959493929190613177565b6102cb611d90565b610268611db4565b6102cb61044436600461287f565b611dfa565b610268611e0f565b61023f611eaf565b610268611ebe565b610469611f1a565b60405161024c91906131c9565b610268611f26565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806104ae83610c73565b6001600160a01b0384166000908152600e602052604090205490915061271082106104db578092506104f3565b6127106104e88284611f2c565b816104ef57fe5b0492505b5050919050565b6000546001600160a01b0316331461052d5760405162461bcd60e51b815260040161052490612ddf565b60405180910390fd5b81156105c8576001600160a01b0383161515806105475750805b6105635760405162461bcd60e51b815260040161052490612c40565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b0319918216179091556001805490911690556105e4565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b6000546001600160a01b031633146106135760405162461bcd60e51b815260040161052490612ddf565b600082600481111561062157fe5b1415610664576201fa4081101561064a5760405162461bcd60e51b815260040161052490612e57565b6009805463ffffffff191663ffffffff831617905561071c565b600182600481111561067257fe5b14156106a4576103e881111561069a5760405162461bcd60e51b815260040161052490612c0b565b600681905561071c565b60028260048111156106b257fe5b14156106e4576127108111156106da5760405162461bcd60e51b815260040161052490612b74565b600781905561071c565b60038260048111156106f257fe5b141561070257600881905561071c565b600482600481111561071057fe5b141561071c5760058190555b7f4e3705d256225a38255bfb7114e7fa4b6b2939ab1f71639f57e06928858646c5828260405161074d929190612b29565b60405180910390a15050565b6000546001600160a01b031633146107835760405162461bcd60e51b815260040161052490612ddf565b6001600160a01b03166000908152601160205260409020805460ff19169055565b6000336001600160a01b038416146107ce5760405162461bcd60e51b815260040161052490612fcb565b6107d6612825565b506001600160a01b0383166000908152600e602090815260408083208151608081018352815481526001820154938101939093526002015463ffffffff80821692840192909252600160201b90041660608201529061083485610c73565b905061271081106108c4576001600160a01b0385166000818152600e602052604080822082815560018101839055600201805467ffffffffffffffff19169055845190517f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b1926108a4929161314c565b60405180910390a26108bb85858460000151611f50565b92505050610a11565b8151600090612710906108d79084611f2c565b816108de57fe5b049050604051806080016040528061090383866000015161225590919063ffffffff16565b8152602001846020015181526020014263ffffffff16815260200161095761093e86604001514263ffffffff1661226590919063ffffffff16565b866060015163ffffffff1661226590919063ffffffff16565b63ffffffff9081169091526001600160a01b0388166000818152600e6020908152604091829020855180825591860151600182015585830151600290910180546060909701518616600160201b0267ffffffff00000000199290961663ffffffff1990971696909617169390931790935591517f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b1916109f89185919061314c565b60405180910390a2610a0b868683611f50565b93505050505b92915050565b600354600160a01b900460ff1681565b6000546001600160a01b03163314610a515760405162461bcd60e51b815260040161052490612ddf565b60045415610a715760405162461bcd60e51b815260040161052490612f51565b6028861015610a925760405162461bcd60e51b815260040161052490612f24565b6103e8841115610ab45760405162461bcd60e51b815260040161052490612c0b565b6201fa408163ffffffff161015610add5760405162461bcd60e51b815260040161052490612e57565b612710831115610aff5760405162461bcd60e51b815260040161052490612b74565b6040805160c08101825287815260208101879052808201869052606081018590526080810184905263ffffffff83811660a0909201829052600489815560058990556006889055600787905560088690556009805463ffffffff19908116909417905560108054909316429092169190911790915590517f0df16b6e9edd2420312d801992c90082fdf3061dc551178c6f5d504e381a20fc91610ba1916130ca565b60405180910390a1505050505050565b600a54600b54600c54600d5460ff9093169263ffffffff80821691600160201b90041685565b6002546001600160a01b031681565b6001546001600160a01b0316338114610c115760405162461bcd60e51b815260040161052490612eef565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000610c7d612825565b506001600160a01b0382166000908152600e602090815260408083208151608081018352815481526001820154938101939093526002015463ffffffff808216928401839052600160201b90910481166060840152919291610ce3914282169161226516565b606083015163ffffffff9182169250168015610d155780610d0683612710611f2c565b81610d0d57fe5b049350610d1a565b600093505b505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03163314610d705760405162461bcd60e51b815260040161052490612ddf565b6001600160a01b038116610d965760405162461bcd60e51b815260040161052490612ed2565b6001600160a01b03166000908152601160205260409020805460ff19166001179055565b6000610dd0610dc7611ebe565b600f5490612255565b90505b90565b6003546001600160a01b031681565b6000662386f26fc10000610e08610e0384610dfe611db4565b61227e565b61236c565b81610e0f57fe5b0490505b919050565b60007f000000000000000000000000000000000000000000000000000000000000000015610f1e576064610f0f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332da80a37f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610eb19190612a9f565b60206040518083038186803b158015610ec957600080fd5b505afa158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0191906129cd565b610f09611db4565b90611f2c565b81610f1657fe5b049050610dd3565b6064610fc27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610f7c57600080fd5b505afa158015610f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb49190612a62565b60ff16600a0a610f09611db4565b81610fc957fe5b04905090565b6000546001600160a01b031681565b60006001600160a01b0382166110065760405162461bcd60e51b815260040161052490612be2565b336001600160a01b038316148061102c57503360009081526011602052604090205460ff165b6110485760405162461bcd60e51b81526004016105249061301e565b611050612388565b600061105a610e18565b905060006110666123ad565b9050808510156110885760405162461bcd60e51b815260040161052490612e14565b604051630f762d4d60e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631eec5a9a906110f9907f0000000000000000000000000000000000000000000000000000000000000000908b90600401612ad7565b60206040518083038186803b15801561111157600080fd5b505afa158015611125573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114991906129cd565b9050600061115682610de5565b600854600f549192509061116a90846123f6565b11156111885760405162461bcd60e51b815260040161052490612cff565b629896808110156111ab5760405162461bcd60e51b815260040161052490612d9b565b6111b3611e0f565b8111156111d25760405162461bcd60e51b815260040161052490612fa3565b600754600090612710906111e7908490611f2c565b816111ee57fe5b0490506000611207826112018686612255565b90612255565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016112579190612a9f565b60206040518083038186803b15801561126f57600080fd5b505afa158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a791906129cd565b90506112de6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308e612406565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b39061134c907f0000000000000000000000000000000000000000000000000000000000000000908f90600401612ad7565b602060405180830381600087803b15801561136657600080fd5b505af115801561137a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139e9190612924565b5060405163bc157ac160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bc157ac19061140f908e907f000000000000000000000000000000000000000000000000000000000000000090879060040161312d565b602060405180830381600087803b15801561142957600080fd5b505af115801561143d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114619190612924565b5082156114bc576114bc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000085612464565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190611508903090600401612a9f565b60206040518083038186803b15801561152057600080fd5b505afa158015611534573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155891906129cd565b61156282846123f6565b1461157f5760405162461bcd60e51b815260040161052490612d64565b600f5461158c90866123f6565b600f55604080516080810182526001600160a01b038b166000908152600e602052919091205481906115be90876123f6565b81526020018881526020014263ffffffff168152602001600460050160009054906101000a900463ffffffff1663ffffffff16815250600e60008b6001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff160217905550905050866116ad600460050160009054906101000a900463ffffffff1663ffffffff16426123f690919063ffffffff16565b857f1fec6dc81f140574bf43f6b1e420ae1dd47928b9d57db8cbd7b8611063b85ae58e6040516116dd919061310d565b60405180910390a46116ed611bb9565b6116f56123ad565b6116fd610e18565b6040517f375b221f40939bfd8f49723a17cf7bc6d576ebf72efe2cc3e991826f5b3f390a90600090a461172e612483565b50919998505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000001561183157633b9aca00610f0f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332da80a37f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016117d99190612a9f565b60206040518083038186803b1580156117f157600080fd5b505afa158015611805573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182991906129cd565b610f09611bb9565b611839611bb9565b9050610dd3565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316331461188e5760405162461bcd60e51b815260040161052490612ddf565b6004546103e8906118a0906019611f2c565b816118a757fe5b048311156118c75760405162461bcd60e51b815260040161052490612cb5565b60288210156118e85760405162461bcd60e51b815260040161052490612bab565b6040805160a0810182528515158082526020820186905281830185905263ffffffff84811660608401819052429091166080909301839052600a805460ff19169092178255600b879055600c869055600d805463ffffffff191690911767ffffffff000000001916600160201b9093029290921790915590517f12e0d895835c5636a844b2d6d6e82e6b0e5e7df951b7beb2dcb89eb46ddb875e9161198c91613086565b60405180910390a150505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156119ee5760405162461bcd60e51b815260040161052490612f86565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611a405760405162461bcd60e51b815260040161052490612ce2565b6040516370a0823160e01b81526000906001600160a01b038416906370a0823190611a6f903090600401612a9f565b60206040518083038186803b158015611a8757600080fd5b505afa158015611a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abf91906129cd565b9050611af56001600160a01b0384167f000000000000000000000000000000000000000000000000000000000000000083612464565b826001600160a01b03167f11f0a001971cc33b9a8651a3368b34900c22a665504b5cabc3e0e9fdf59d984682604051611b2e919061310d565b60405180910390a250600192915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e6020526000908152604090208054600182015460029092015490919063ffffffff80821691600160201b90041684565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1557600080fd5b505afa158015611c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4d91906129cd565b9050670de0b6b3a7640000611c74610e03611c6e633b9aca00610f09610dba565b8461227e565b81611c7b57fe5b0491505090565b6000546001600160a01b03163314611cac5760405162461bcd60e51b815260040161052490612ddf565b6001600160a01b038216611cd25760405162461bcd60e51b815260040161052490612dc3565b8015611d075760038054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b038416179055611d30565b6003805460ff60a01b19169055600280546001600160a01b0319166001600160a01b0384161790555b816001600160a01b03167f9618307401872b2d1dc9c414b9568d81ab7cdf31913dbbcbcc296036b4a6a35782604051611d699190612af0565b60405180910390a25050565b60045460055460065460075460085460095463ffffffff1686565b7f000000000000000000000000000000000000000000000000000000000000000081565b600062989680611ddc633b9aca00611dd6611dcd611bb9565b60045490611f2c565b906123f6565b81611de357fe5b049050600460010154811015610dd3575060055490565b60116020526000908152604090205460ff1681565b6000620186a0610fc26004600201547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e7757600080fd5b505afa158015611e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0991906129cd565b6001546001600160a01b031681565b6010546000908190611edc9063ffffffff4281169181169061226516565b600954600f5491925063ffffffff90811691611efc9180851690611f2c16565b81611f0357fe5b049150600f54821115611f1657600f5491505b5090565b60105463ffffffff1681565b600f5481565b6000821580611f4757505081810281838281611f4457fe5b04145b610a1157600080fd5b600082611ffd5760405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90611fa59087908690600401612ad7565b602060405180830381600087803b158015611fbf57600080fd5b505af1158015611fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff79190612924565b5061224e565b600354600160a01b900460ff16156121205760035460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263095ea7b3926120649291909116908690600401612ad7565b602060405180830381600087803b15801561207e57600080fd5b505af1158015612092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b69190612924565b50600354604051637acb775760e01b81526001600160a01b0390911690637acb7757906120e99085908890600401613116565b600060405180830381600087803b15801561210357600080fd5b505af1158015612117573d6000803e3d6000fd5b5050505061224e565b60025460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263095ea7b3926121759291909116908690600401612ad7565b602060405180830381600087803b15801561218f57600080fd5b505af11580156121a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c79190612924565b50600254604051637acb775760e01b81526001600160a01b0390911690637acb7757906121fa9085908890600401613116565b602060405180830381600087803b15801561221457600080fd5b505af1158015612228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224c9190612924565b505b5092915050565b80820382811115610a1157600080fd5b80820363ffffffff8084169082161115610a1157600080fd5b612286612859565b600082116122a65760405162461bcd60e51b815260040161052490612c6f565b826122c05750604080516020810190915260008152610a11565b71ffffffffffffffffffffffffffffffffffff831161233257600082607085901b816122e857fe5b0490506001600160e01b038111156123125760405162461bcd60e51b815260040161052490612e9b565b6040518060200160405280826001600160e01b0316815250915050610a11565b600061234384600160701b85612594565b90506001600160e01b038111156123125760405162461bcd60e51b815260040161052490612e9b565b80516000906612725dd1d243ab906001600160e01b0316610e0f565b612393610dc7611ebe565b600f556010805463ffffffff19164263ffffffff16179055565b6000629896806123c6633b9aca00611dd6611dcd611bb9565b816123cd57fe5b0490506004600101548110156123e65750600554610dd3565b60055415610dd357600060055590565b80820182811015610a1157600080fd5b61245e846323b872dd60e01b85858560405160240161242793929190612ab3565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526125ff565b50505050565b6105e48363a9059cbb60e01b8484604051602401612427929190612ad7565b600d546000906124a59063ffffffff600160201b820481169181169061268e16565b63ffffffff169050600a600101546000141580156124c35750804210155b1561259157600454600a54819060ff161561250157600b546124e69082906123f6565b600c5490915081106124fc57506000600b55600c545b612525565b600b5461250f908290612255565b600c54909150811161252557506000600b55600c545b6004819055600d805467ffffffff000000001916600160201b4263ffffffff1602179055600b54600a546040517fb923e581a0f83128e9e1d8297aa52b18d6744310476e0b54509c054cd7a93b2a9261258692869286929160ff169061315a565b60405180910390a150505b50565b60008060006125a386866126a7565b91509150600084806125b157fe5b8688099050828111156125c5576001820391505b80830392508482106125e95760405162461bcd60e51b815260040161052490612d2d565b6125f48383876126d4565b979650505050505050565b6060612654826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127449092919063ffffffff16565b8051909150156105e457808060200190518101906126729190612924565b6105e45760405162461bcd60e51b81526004016105249061303c565b80820163ffffffff8084169082161015610a1157600080fd5b60008080600019848609905083850292508281039150828110156126cc576001820391505b509250929050565b600081810382168083816126e457fe5b0492508085816126f057fe5b0494508081600003816126ff57fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6060612753848460008561275b565b949350505050565b60606127668561281f565b6127825760405162461bcd60e51b815260040161052490612fe7565b60006060866001600160a01b0316858760405161279f9190612a83565b60006040518083038185875af1925050503d80600081146127dc576040519150601f19603f3d011682016040523d82523d6000602084013e6127e1565b606091505b509150915081156127f55791506127539050565b8051156128055780518082602001fd5b8360405162461bcd60e51b81526004016105249190612b41565b3b151590565b60405180608001604052806000815260200160008152602001600063ffffffff168152602001600063ffffffff1681525090565b60408051602081019091526000815290565b803563ffffffff81168114610e1357600080fd5b600060208284031215612890578081fd5b813561289b81613206565b9392505050565b600080604083850312156128b4578081fd5b82356128bf81613206565b915060208301356128cf8161321b565b809150509250929050565b6000806000606084860312156128ee578081fd5b83356128f981613206565b925060208401356129098161321b565b915060408401356129198161321b565b809150509250925092565b600060208284031215612935578081fd5b815161289b8161321b565b60008060008060808587031215612955578081fd5b84356129608161321b565b9350602085013592506040850135915061297c6060860161286b565b905092959194509250565b60008060408385031215612999578182fd5b8235600581106129a7578283fd5b946020939093013593505050565b6000602082840312156129c6578081fd5b5035919050565b6000602082840312156129de578081fd5b5051919050565b6000806000606084860312156129f9578283fd5b8335925060208401359150604084013561291981613206565b60008060008060008060c08789031215612a2a578182fd5b8635955060208701359450604087013593506060870135925060808701359150612a5660a0880161286b565b90509295509295509295565b600060208284031215612a73578081fd5b815160ff8116811461289b578182fd5b60008251612a958184602087016131da565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b94151585526020850193909352604084019190915263ffffffff908116606084015216608082015260a00190565b6040810160058410612b3757fe5b9281526020015290565b6000602082528251806020840152612b608160408501602087016131da565b601f01601f19169190910160400192915050565b6020808252601c908201527f44414f206665652063616e6e6f7420657863656564207061796f757400000000604082015260600190565b6020808252601f908201527f4e6578742041646a7573746d656e7420636f756c64206265206c6f636b656400604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b6020808252818101527f5061796f75742063616e6e6f742062652061626f766520312070657263656e74604082015260600190565b6020808252601590820152744f776e61626c653a207a65726f206164647265737360581b604082015260600190565b60208082526026908201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260408201526579207a65726f60d01b606082015260800190565b602080825260139082015272496e6372656d656e7420746f6f206c6172676560681b604082015260600190565b60208082526003908201526204e41560ec1b604082015260600190565b60208082526014908201527313585e0818d85c1858da5d1e481c995858da195960621b604082015260600190565b6020808252601a908201527f46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77000000000000604082015260600190565b6020808252601f908201527f4e6f7420656e6f756768204175786c20746f20636f7665722070726f66697400604082015260600190565b6020808252600e908201526d109bdb99081d1bdbc81cdb585b1b60921b604082015260600190565b602080825260029082015261494160f01b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f536c697070616765206c696d69743a206d6f7265207468616e206d617820707260408201526269636560e81b606082015260800190565b60208082526024908201527f56657374696e67206d757374206265206c6f6e676572207468616e20333620686040820152636f75727360e01b606082015260800190565b6020808252601e908201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604082015260600190565b6020808252600390820152625a4e4160e81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604082015260600190565b60208082526013908201527210d85b881b1bd8dac818591a9d5cdd1b595b9d606a1b604082015260600190565b6020808252818101527f426f6e6473206d75737420626520696e697469616c697a65642066726f6d2030604082015260600190565b60208082526003908201526213905560ea1b604082015260600190565b6020808252600e908201526d426f6e6420746f6f206c6172676560901b604082015260600190565b6020808252600290820152614e4160f01b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600490820152634c464e4160e01b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b815460ff161515815260018201546020808301919091526002830154604083015260039092015463ffffffff8082166060840152921c909116608082015260a00190565b815481526001820154602082015260028201546040820152600382015460608201526004820154608082015260059091015463ffffffff1660a082015260c00190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03919091166020830152604082015260600190565b918252602082015260400190565b938452602084019290925260408301521515606082015260800190565b958652602086019490945260408501929092526060840152608083015263ffffffff1660a082015260c00190565b938452602084019290925263ffffffff908116604084015216606082015260800190565b63ffffffff91909116815260200190565b60005b838110156131f55781810151838201526020016131dd565b8381111561245e5750506000910152565b6001600160a01b038116811461259157600080fd5b801515811461259157600080fdfea26469706673582212205add49c6c09d4b84538231c2e219dfc90df393ee139233d353b9deb4ce86d15b64736f6c63430007050033";

export class AuxlBondDepository__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _Auxl: string,
    _principle: string,
    _treasury: string,
    _DAO: string,
    _bondCalculator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AuxlBondDepository> {
    return super.deploy(
      _Auxl,
      _principle,
      _treasury,
      _DAO,
      _bondCalculator,
      overrides || {}
    ) as Promise<AuxlBondDepository>;
  }
  getDeployTransaction(
    _Auxl: string,
    _principle: string,
    _treasury: string,
    _DAO: string,
    _bondCalculator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _Auxl,
      _principle,
      _treasury,
      _DAO,
      _bondCalculator,
      overrides || {}
    );
  }
  attach(address: string): AuxlBondDepository {
    return super.attach(address) as AuxlBondDepository;
  }
  connect(signer: Signer): AuxlBondDepository__factory {
    return super.connect(signer) as AuxlBondDepository__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuxlBondDepositoryInterface {
    return new utils.Interface(_abi) as AuxlBondDepositoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuxlBondDepository {
    return new Contract(address, _abi, signerOrProvider) as AuxlBondDepository;
  }
}
