/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AuxlStaking, AuxlStakingInterface } from "../AuxlStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_Auxl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_Nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sAuxl",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_epochLength",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_firstEpochNumber",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_firstEpochAuxl",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogClaim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "locked",
        type: "bool",
      },
    ],
    name: "LogDepositLock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sAuxlAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auxlAmount",
        type: "uint256",
      },
    ],
    name: "LogForfeit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "distribute",
        type: "uint256",
      },
    ],
    name: "LogRebase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum AuxlStaking.CONTRACTS",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "LogSetContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogUnstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "LogWarmupPeriod",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "Auxl",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC1155",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributor",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "distribute",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "length",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "endAuxl",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forfeit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getStakedTokenForAddress",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenId",
        type: "uint8",
      },
    ],
    name: "permitNFTForStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rebase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenId",
        type: "uint8",
      },
    ],
    name: "removeNFTForStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sAuxl",
    outputs: [
      {
        internalType: "contract ISAuxl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum AuxlStaking.CONTRACTS",
        name: "_contract",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_warmupPeriod",
        type: "uint8",
      },
    ],
    name: "setWarmup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_tokenId",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleDepositLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBonus",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_trigger",
        type: "bool",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "warmupContract",
    outputs: [
      {
        internalType: "contract IWarmup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "warmupInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gons",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "lock",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "nftStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warmupPeriod",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "whitelistedTokenIDs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200223638038062002236833981016040819052620000349162000160565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0386166200008757600080fd5b6001600160a01b038087166080528416620000a157600080fd5b6001600160a01b0380851660a0528516620000bb57600080fd5b6001600160a01b0390941660c0526040805160808101825282815260006020820181905263ffffffff948516928201839052959093166060909301839052600291909155600393909355600480546401000000009092026001600160401b03199092169093171790915550620001d89050565b80516001600160a01b03811681146200014657600080fd5b919050565b805163ffffffff811681146200014657600080fd5b60008060008060008060c087890312156200017a57600080fd5b62000185876200012e565b955062000195602088016200012e565b9450620001a5604088016200012e565b9350620001b5606088016200014b565b925060808701519150620001cc60a088016200014b565b90509295509295509295565b60805160a05160c051611fb0620002866000396000818161033301528181610a4f01528181610be30152610dc201526000818161022c0152818161071a0152818161083a015281816108d7015281816109aa01528181610f59015281816110a20152818161137401528181611439015281816115b101526117e301526000818161046a015281816109df01528181610e570152818161127c015281816113a901526118d50152611fb06000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063bfe1092811610097578063e30c397811610071578063e30c3978146104a0578063ed4acaa8146104b3578063ef1e64ff146104c6578063f3d86e4a146104d957600080fd5b8063bfe1092814610452578063c33c53dd14610465578063deac361a1461048c57600080fd5b80639ebea88c116100d35780639ebea88c14610410578063a8dd07dc14610423578063af14052c14610437578063b6a9c1991461043f57600080fd5b80638da5cb5b146103a55780638f077b83146103b8578063900cf0cf146103c057600080fd5b80634e71e0c8116101665780637c0b8de2116101405780637c0b8de21461032e578063865e6fd3146103555780638a3d0ec5146103685780638b7afe2e1461039d57600080fd5b80634e71e0c8146102995780636746f4c2146102a1578063686a96791461031b57600080fd5b80632986c0e5116101a25780632986c0e51461020457806335322f371461021f5780633e7a789a14610227578063487d06af1461026657600080fd5b8063078dfbe7146101c95780630f3183ea146101de5780631e83409a146101f1575b600080fd5b6101dc6101d7366004611c3f565b6104e1565b005b6101dc6101ec366004611c99565b6105f8565b6101dc6101ff366004611cbb565b61063d565b61020c610836565b6040519081526020015b60405180910390f35b6101dc6108bf565b61024e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610216565b610289610274366004611c99565b60076020526000908152604090205460ff1681565b6040519015158152602001610216565b6101dc610afc565b6102ea6102af366004611cbb565b600960205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c001610216565b610289610329366004611cd6565b610bb9565b61024e7f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610363366004611d12565b611119565b61038b610376366004611cbb565b60086020526000908152604090205460ff1681565b60405160ff9091168152602001610216565b61020c611251565b60005461024e906001600160a01b031681565b6101dc6112f5565b6002546003546004546103e492919063ffffffff8082169164010000000090041684565b60408051948552602085019390935263ffffffff91821692840192909252166060820152608001610216565b6101dc61041e366004611d4b565b611359565b60055461038b90600160a01b900460ff1681565b6101dc611402565b6101dc61044d366004611c99565b61168d565b60055461024e906001600160a01b031681565b61024e7f000000000000000000000000000000000000000000000000000000000000000081565b60055461038b90600160a81b900460ff1681565b60015461024e906001600160a01b031681565b60065461024e906001600160a01b031681565b6101dc6104d4366004611c99565b6116d5565b6101dc611753565b6000546001600160a01b031633146105145760405162461bcd60e51b815260040161050b90611d7b565b60405180910390fd5b81156105d7576001600160a01b03831615158061052e5750805b6105725760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015260640161050b565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b6000546001600160a01b031633146106225760405162461bcd60e51b815260040161050b90611d7b565b60ff166000908152600760205260409020805460ff19169055565b6001600160a01b038116600090815260096020908152604091829020825160c081018452815481526001820154928101929092526002808201549383018490526003820154606084015260049091015460ff8082161515608085015261010090910416151560a0830152549091118015906106bb5750604081015115155b15610832576001600160a01b0382811660009081526009602090815260408083208381556001810184905560028101849055600381018490556004908101805461ffff19169055918501519051637965d56d60e01b81529182015290917f00000000000000000000000000000000000000000000000000000000000000001690637965d56d90602401602060405180830381865afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107859190611db0565b60065460405163c3a2a66560e01b81526001600160a01b0386811660048301526024820184905292935091169063c3a2a66590604401600060405180830381600087803b1580156107d557600080fd5b505af11580156107e9573d6000803e3d6000fd5b50505050826001600160a01b03167ffce6d5860f911bc27ece1365300332d2ddbe20c1adc46ee2eddd8f72c48053b28260405161082891815260200190565b60405180910390a2505b5050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba9190611db0565b905090565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094a9190611db0565b3360009081526008602052604090205490915060ff1661099d5760405162461bcd60e51b815260206004820152600e60248201526d139195081b9bdd0814dd185ad95960921b604482015260640161050b565b6109d26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611939565b610a066001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836119aa565b33600081815260086020908152604091829020805460ff198116909155825180840184526001808252600360fc1b938201939093529251637921219560e11b815260ff909116937f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169363f242432a93610a9093309392889291600401611e21565b600060405180830381600087803b158015610aaa57600080fd5b505af1158015610abe573d6000803e3d6000fd5b50506040518481523392507faf14da4c9c7eeb91ef462950405340d31988005c789d867d3a1394f082105e8991506020015b60405180910390a25050565b6001546001600160a01b0316338114610b575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015260640161050b565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000610bc3611402565b604051627eeac760e11b815233600482015260ff831660248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062fdd58e90604401602060405180830381865afa158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c559190611db0565b101580610c79575033600090815260096020526040902060040154610100900460ff165b80610c9557503360009081526008602052604090205460ff1615155b610cf75760405162461bcd60e51b815260206004820152602d60248201527f4d7573742070726f766964652f686176652070726f7669646564206174206c6560448201526c185cdd080c481d1bdad95b9259609a1b606482015260840161050b565b60ff80831660009081526007602052604090205416610d585760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e206d757374206265207374616b61626c6520627920796f75210000604482015260640161050b565b33600090815260096020526040902060040154610100900460ff161580610d8f57503360009081526008602052604090205460ff16155b15610e4a576040805180820182526001808252600360fc1b60208301529151637921219560e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263f242432a92610dfb92339230928992600401611e21565b600060405180830381600087803b158015610e1557600080fd5b505af1158015610e29573d6000803e3d6000fd5b5050336000908152600860205260409020805460ff191660ff861617905550505b610e7f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087611939565b6001600160a01b038316600090815260096020908152604091829020825160c081018452815481526001820154928101929092526002810154928201929092526003820154606082015260049091015460ff808216158015608085015261010090920416151560a0830152610f365760405162461bcd60e51b815260206004820152601f60248201527f4465706f7369747320666f72206163636f756e7420617265206c6f636b656400604482015260640161050b565b6040805160c0810190915281518190610f4f90886119da565b8152602001610ff17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631bd39674896040518263ffffffff1660e01b8152600401610fa591815260200190565b602060405180830381865afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190611db0565b6020850151906119da565b815260055460025460209092019161101291600160a81b900460ff166119da565b815260ff851660208083019190915260006040808401829052600160609485018190526001600160a01b03808b1684526009855292829020865181559386015190840155840151600283015591830151600382015560808301516004909101805460a09094015115156101000261ff00199215159290921661ffff1990941693909317179091556006546110cb917f000000000000000000000000000000000000000000000000000000000000000081169116876119aa565b836001600160a01b03167f3dbdcfd4c1f2e08931aae3d544e149a1e643143f5234d166fe3debb7833884958660405161110691815260200190565b60405180910390a2506001949350505050565b6000546001600160a01b031633146111435760405162461bcd60e51b815260040161050b90611d7b565b600082600181111561115757611157611e68565b141561117d57600580546001600160a01b0319166001600160a01b038316179055611218565b600182600181111561119157611191611e68565b1415611218576006546001600160a01b0316156111fc5760405162461bcd60e51b815260206004820152602360248201527f5761726d75702063616e6e6f7420626520736574206d6f7265207468616e206f6044820152626e636560e81b606482015260840161050b565b600680546001600160a01b0319166001600160a01b0383161790555b806001600160a01b03167f74a3f47ee8c75a3912be4eeb0120ef2a7e6d7dfb822ea75f3f3843a3d366ae7883604051610af09190611e7e565b6005546040516370a0823160e01b81523060048201526000916108ba91600160a01b90910460ff16907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156112cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ef9190611db0565b906119da565b3360008181526009602052604090819020600401805460ff19811660ff9182161590811790925591517f84980d6cdf0a9cada77d43f70d2d8419bd623f064919f2e227dbc39404866dc99261134f92161515815260200190565b60405180910390a2565b801561136757611367611402565b61139c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611939565b6113d06001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846119aa565b60405182815233907faf14da4c9c7eeb91ef462950405340d31988005c789d867d3a1394f082105e8990602001610af0565b60045463ffffffff428116640100000000909204161161168b57600354600254604051630163b36d60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263058ecdb49261147592600401918252602082015260400190565b6020604051808303816000875af1158015611494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b89190611db0565b506004546114d99063ffffffff64010000000082048116918116906119fb16565b6004805463ffffffff929092166401000000000267ffffffff00000000199092169190911790556002805490600061151083611ebc565b90915550506005546001600160a01b0316156115a157600560009054906101000a90046001600160a01b03166001600160a01b031663e4fc6b6d6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561157b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159f9190611ed7565b505b60006115ab611251565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639358928b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561160d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116319190611db0565b9050808211611644576000600355611652565b61164e8282611a22565b6003555b6003546040519081527f60633057fb2c2558942a126acc1dc7c639b6fdee660a0171f7500e2ac5918b2e9060200160405180910390a150505b565b6000546001600160a01b031633146116b75760405162461bcd60e51b815260040161050b90611d7b565b60ff166000908152600760205260409020805460ff19166001179055565b6000546001600160a01b031633146116ff5760405162461bcd60e51b815260040161050b90611d7b565b6005805460ff60a81b1916600160a81b60ff8416908102919091179091556040519081527f0538aaeb1d9d528cb5e132864d95d2d7350a7a3879a90d0ce93164557c22ed319060200160405180910390a150565b336000818152600960208181526040808420815160c081018352815481526001820180548286019081526002840180548487015260038501805460608601526004808701805460ff808216151560808a0152610100820416151560a08901529c8c52999098529489905591889055908790559186905561ffff1990961690935591519151637965d56d60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692637965d56d92611820920190815260200190565b602060405180830381865afa15801561183d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118619190611db0565b60065460405163c3a2a66560e01b8152306004820152602481018390529192506001600160a01b03169063c3a2a66590604401600060405180830381600087803b1580156118ae57600080fd5b505af11580156118c2573d6000803e3d6000fd5b505083516118fe92506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915033906119aa565b815160405133917fed3bd88323251a29d30eb9552dda9f85957286ace369047d9b59ecccd4939e1291610af091858252602082015260400190565b6040516001600160a01b03808516602483015283166044820152606481018290526119a49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a3d565b50505050565b6040516001600160a01b0383166024820152604481018290526105f390849063a9059cbb60e01b9060640161196d565b6000826119e78382611ef4565b91508110156119f557600080fd5b92915050565b600063ffffffff8316611a0e8385611f0c565b91508163ffffffff1610156119f557600080fd5b600082611a2f8382611f34565b91508111156119f557600080fd5b6000611a92826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b0f9092919063ffffffff16565b8051909150156105f35780806020019051810190611ab09190611ed7565b6105f35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161050b565b6060611b1e8484600085611b26565b949350505050565b6060843b611b765760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161050b565b600080866001600160a01b03168587604051611b929190611f4b565b60006040518083038185875af1925050503d8060008114611bcf576040519150601f19603f3d011682016040523d82523d6000602084013e611bd4565b606091505b50915091508115611be8579150611b1e9050565b805115611bf85780518082602001fd5b8360405162461bcd60e51b815260040161050b9190611f67565b80356001600160a01b0381168114611c2957600080fd5b919050565b8015158114611c3c57600080fd5b50565b600080600060608486031215611c5457600080fd5b611c5d84611c12565b92506020840135611c6d81611c2e565b91506040840135611c7d81611c2e565b809150509250925092565b803560ff81168114611c2957600080fd5b600060208284031215611cab57600080fd5b611cb482611c88565b9392505050565b600060208284031215611ccd57600080fd5b611cb482611c12565b600080600060608486031215611ceb57600080fd5b83359250611cfb60208501611c12565b9150611d0960408501611c88565b90509250925092565b60008060408385031215611d2557600080fd5b823560028110611d3457600080fd5b9150611d4260208401611c12565b90509250929050565b60008060408385031215611d5e57600080fd5b823591506020830135611d7081611c2e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611dc257600080fd5b5051919050565b60005b83811015611de4578181015183820152602001611dcc565b838111156119a45750506000910152565b60008151808452611e0d816020860160208601611dc9565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260ff841660408201526060810183905260a060808201819052600090611e5d90830184611df5565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b6020810160028310611ea057634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611ed057611ed0611ea6565b5060010190565b600060208284031215611ee957600080fd5b8151611cb481611c2e565b60008219821115611f0757611f07611ea6565b500190565b600063ffffffff808316818516808303821115611f2b57611f2b611ea6565b01949350505050565b600082821015611f4657611f46611ea6565b500390565b60008251611f5d818460208701611dc9565b9190910192915050565b602081526000611cb46020830184611df556fea264697066735822122063a036009e89d172c200b74a2220b51c7dbe6e803148706c4807e2998448b12064736f6c634300080b0033";

export class AuxlStaking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _Auxl: string,
    _Nft: string,
    _sAuxl: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochAuxl: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AuxlStaking> {
    return super.deploy(
      _Auxl,
      _Nft,
      _sAuxl,
      _epochLength,
      _firstEpochNumber,
      _firstEpochAuxl,
      overrides || {}
    ) as Promise<AuxlStaking>;
  }
  getDeployTransaction(
    _Auxl: string,
    _Nft: string,
    _sAuxl: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochAuxl: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _Auxl,
      _Nft,
      _sAuxl,
      _epochLength,
      _firstEpochNumber,
      _firstEpochAuxl,
      overrides || {}
    );
  }
  attach(address: string): AuxlStaking {
    return super.attach(address) as AuxlStaking;
  }
  connect(signer: Signer): AuxlStaking__factory {
    return super.connect(signer) as AuxlStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuxlStakingInterface {
    return new utils.Interface(_abi) as AuxlStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuxlStaking {
    return new Contract(address, _abi, signerOrProvider) as AuxlStaking;
  }
}
