/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AuxlBondingCalculator,
  AuxlBondingCalculatorInterface,
} from "../AuxlBondingCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_Auxl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Auxl",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getKValue",
    outputs: [
      {
        internalType: "uint256",
        name: "k_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610cad380380610cad8339818101604052602081101561003357600080fd5b50516001600160a01b03811661004857600080fd5b606081901b6001600160601b0319166080526001600160a01b0316610c24610089600039806101d1528061025d528061034e52806107fb5250610c246000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806332da80a31461005c5780634249719f14610094578063490084ef146100c057806368637549146100e6578063c33c53dd1461010c575b600080fd5b6100826004803603602081101561007257600080fd5b50356001600160a01b0316610130565b60408051918252519081900360200190f35b610082600480360360408110156100aa57600080fd5b506001600160a01b0381351690602001356103f2565b610082600480360360208110156100d657600080fd5b50356001600160a01b031661049a565b610082600480360360208110156100fc57600080fd5b50356001600160a01b03166107db565b6101146107f9565b604080516001600160a01b039092168252519081900360200190f35b6000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561016e57600080fd5b505afa158015610182573d6000803e3d6000fd5b505050506040513d606081101561019857600080fd5b50805160209182015160408051630dfe168160e01b815290516001600160701b0393841696509290911693506000926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169390891692630dfe1681926004808301939192829003018186803b15801561021957600080fd5b505afa15801561022d573d6000803e3d6000fd5b505050506040513d602081101561024357600080fd5b50516001600160a01b0316141561025b57508061033d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102be57600080fd5b505afa1580156102d2573d6000803e3d6000fd5b505050506040513d60208110156102e857600080fd5b50516001600160a01b03161461033a576040805162461bcd60e51b81526020600482015260126024820152713737ba10309020babc36103638103830b4b960711b604482015290519081900360640190fd5b50815b6103e7610349866107db565b6103e17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103a557600080fd5b505afa1580156103b9573d6000803e3d6000fd5b505050506040513d60208110156103cf57600080fd5b5051849060ff16600a0a60020261081d565b90610841565b93505050505b919050565b6000806103fe846107db565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561043b57600080fd5b505afa15801561044f573d6000803e3d6000fd5b505050506040513d602081101561046557600080fd5b50519050610491670de0b6b3a76400006103e161048a6104858886610860565b6109d7565b859061081d565b95945050505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d657600080fd5b505afa1580156104ea573d6000803e3d6000fd5b505050506040513d602081101561050057600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561054457600080fd5b505afa158015610558573d6000803e3d6000fd5b505050506040513d602081101561056e57600080fd5b50516040805163d21220a760e01b8152905160ff90921692506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b1580156105ba57600080fd5b505afa1580156105ce573d6000803e3d6000fd5b505050506040513d60208110156105e457600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561062857600080fd5b505afa15801561063c573d6000803e3d6000fd5b505050506040513d602081101561065257600080fd5b50516040805163313ce56760e01b8152905160ff90921692506000916001600160a01b0387169163313ce567916004808301926020929190829003018186803b15801561069e57600080fd5b505afa1580156106b2573d6000803e3d6000fd5b505050506040513d60208110156106c857600080fd5b505160408051630240bc6b60e21b8152905160ff909216925060009182916001600160a01b03891691630902f1ac91600480820192606092909190829003018186803b15801561071757600080fd5b505afa15801561072b573d6000803e3d6000fd5b505050506040513d606081101561074157600080fd5b5080516020909101516001600160701b0391821693501690508261076586866109ef565b10156107a357600061078161077a87876109ef565b85906109ff565b905061079b600a82900a610795858561081d565b9061081d565b9650506107d1565b60006107b9846107b388886109ef565b906109ff565b90506107cd600a82900a6103e1858561081d565b9650505b5050505050919050565b60006107f360026107956107ee8561049a565b610a0f565b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008215806108385750508181028183828161083557fe5b04145b6107f357600080fd5b600080821161084f57600080fd5b81838161085857fe5b049392505050565b610868610bb6565b600082116108a75760405162461bcd60e51b8152600401808060200182810382526026815260200180610bc96026913960400191505060405180910390fd5b826108c157506040805160208101909152600081526107f3565b71ffffffffffffffffffffffffffffffffffff831161096857600082607085901b816108e957fe5b0490506001600160e01b03811115610948576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b6040518060200160405280826001600160e01b03168152509150506107f3565b600061097984600160701b85610a79565b90506001600160e01b03811115610948576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b516612725dd1d243ab6001600160e01b039091160490565b808201828110156107f357600080fd5b808203828111156107f357600080fd5b60006003821115610a6b5750806000610a33610a2c836002610841565b60016109ef565b90505b81811015610a6557809150610a5e610a57610a518584610841565b836109ef565b6002610841565b9050610a36565b506103ed565b81156103ed57506001919050565b6000806000610a888686610b19565b9150915060008480610a9657fe5b868809905082811115610aaa576001820391505b8083039250848210610b03576040805162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a3a6d756c4469763a206f766572666c6f77000000000000604482015290519081900360640190fd5b610b0e838387610b46565b979650505050505050565b6000808060001984860990508385029250828103915082811015610b3e576001820391505b509250929050565b60008181038216808381610b5657fe5b049250808581610b6257fe5b049450808160000381610b7157fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6040805160208101909152600081529056fe4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726fa2646970667358221220524f28c08961d0737483e34ca27bb8862e873ef18677b54af39447782291a3c764736f6c63430007050033";

export class AuxlBondingCalculator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _Auxl: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AuxlBondingCalculator> {
    return super.deploy(
      _Auxl,
      overrides || {}
    ) as Promise<AuxlBondingCalculator>;
  }
  getDeployTransaction(
    _Auxl: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_Auxl, overrides || {});
  }
  attach(address: string): AuxlBondingCalculator {
    return super.attach(address) as AuxlBondingCalculator;
  }
  connect(signer: Signer): AuxlBondingCalculator__factory {
    return super.connect(signer) as AuxlBondingCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuxlBondingCalculatorInterface {
    return new utils.Interface(_abi) as AuxlBondingCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuxlBondingCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AuxlBondingCalculator;
  }
}
